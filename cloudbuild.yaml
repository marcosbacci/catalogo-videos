steps:

- id: "Gerando service-account-storage.json"
  name: 'gcr.io/cloud-builders/gcloud'
  args:
    - kms
    - decrypt
    - --ciphertext-file=./backend/storage/credentials/google/service-account-storage.json.enc
    - --plaintext-file=./backend/storage/credentials/google/service-account-storage.json
    - --location=global
    - --keyring=testing-curso
    - --key=service-account

- id: "Executar o docker-compose"
  name: 'gcr.io/$PROJECT_ID/docker-compose'
  #args: ['-f', 'docker-compose.prod.yaml', 'up', '-d']
  args: ['-f', 'docker-compose.yaml', 'up', '-d']
  env:
    - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
    - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
    - GOOGLE_CLOUD_STORAGE_BUCKET=curso-micro-videos
    - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/curso-micro-videos
    - TESTING_PROD=true

- id: "Chown in /var/www"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec','-u','root','-t','app','chown','-R','www-data:www-data','/var/www']

- id: "Executar o compose"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'composer', 'install']

- id: "Copiar o arquivo .env.example para .env"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'cp', '.env.example', '.env']

- id: "Copiar o arquivo .env.testing"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'cp', '.env.testing.example', '.env.testing']

- id: "Rodar um artisan key:generate"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'php', '/var/www/artisan', 'key:generate']

- id: "Executar as migrações"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'php', '/var/www/artisan', 'migrate']

- id: "Executar os testes utilizando o PHPUnit"
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'php', '/var/www/vendor/bin/phpunit', '-c', '/var/www/phpunit.xml']

